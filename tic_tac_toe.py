# -*- coding: utf-8 -*-
"""Tic-Tac-Toe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xmFb6zcMWR4QLvOL0eDwrMjG3fVT5THT
"""

def Tictactoe():
    print('Welcome to Tic-Tac-Toe')
    grid=[[1,2,3],[4,5,6],[7,8,9]]
    print('Enter the name of player1:')
    p1=input()
    print('Choose the symbol which represents you:')
    x=input()
    print('Enter the name of player2:')
    p2=input()
    print('Choose the symbol which represents you:')
    y=input()
    while x==y:
        print('The symbol is already chosen. Please chose any other symbol:')
        y=input()
    d={1:[0,0],2:[0,1],3:[0,2],4:[1,0],5:[1,1],6:[1,2],7:[2,0],8:[2,1],9:[2,2]}
    print(p1+' starts the game first.')
    token=x
    r=0
    c=0
    tie=False
    print('  |   |   ')
    print('1 | 2 | 3 ')
    print('__|___|___')
    print('  |   |   ')
    print('4 | 5 | 6 ')
    print('__|___|___')
    print('  |   |   ')
    print('7 | 8 | 9 ')
    print('  |   |   ')
    def f2():
        nonlocal token,grid,r,c

        if token==x:
            print(p1+' Its your turn.Please enter:')
        elif token==y:
            print(p2+' Its your turn.Please enter:')
        digit=int(input())
        if digit in d:
            r,c=d[digit]
        else:
            print('Invalid digit!!')
            f2()
            return
        if grid[r][c]==digit:
            grid[r][c]=token
            token=x if token==y else y
        else:
            print('The grid is already taken.')
            f2()
    def f1():
        print('  |   |   ')
        print('{0} | {1} | {2} '.format(grid[0][0],grid[0][1],grid[0][2]))
        print('__|___|___')
        print('  |   |   ')
        print('{0} | {1} | {2} '.format(grid[1][0],grid[1][1],grid[1][2]))
        print('__|___|___')
        print('  |   |   ')
        print('{0} | {1} | {2} '.format(grid[2][0],grid[2][1],grid[2][2]))
        print('  |   |   ')
    def f3():
        nonlocal tie
        for i in range(3):
            if grid[i][0]==grid[i][1] and grid[i][0]==grid[i][2]:
                return True
            if grid[0][i]==grid[1][i] and grid[0][i]==grid[2][i]:
                return True
        if grid[0][0]==grid[1][1] and grid[0][0]==grid[2][2]:
            return True
        if grid[0][2]==grid[1][1] and grid[0][2]==grid[2][0]:
            return True
        for i in range(3):
            for j in range(3):
                if grid[i][j]!=x and grid[i][j]!=y:
                    return False
        tie=True
        return True
    while not f3():
        f2()
        f1()
    if not tie and token==x:
        print('The winner is:'+p2)
    elif not tie and token==y:
        print('The winner is:'+p1)
    else:
        print('The game is a tie')
    print('Thank you!!!:)')

Tictactoe()